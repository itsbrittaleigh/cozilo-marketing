/*
 * These are variables meant to be used throughout both .scss files and .vue files 
 * Import this file to the component to leverage the variables, mixins, and functions within the style section of the component
 *
 * Table of Contents:
 *
 * [01] Colors
 * [02] Layout
 * [03] Typography
 */


/*
 * [01] Colors
 */

/*
 * [a] Definitions
 */
$lightblue: #62a9c5;
$darkblue: #2d3f50;
$orange: #ec632e;
$green: #77c373;
$gray: #414142;
$lightgray: #8a8a8a;
$white: #f8f2e8;

/*
* [02] Layout
* 
* Screen size breakpoints are pulled from Bootstrap's media queries
*/

/*
* [a] Definitions
*/
$small: 576px;
$medium: 768px;
$large: 992px;
$xlarge: 1200px;
$xxlarge: 1440px;
$xxxlarge: 1600px;

/*
* [b] Mixins
*/
@mixin media-breakpoint-up($size) {
  @media only screen and (min-width: $size) {
    @content;
  }
}

@mixin media-breakpoint-down($size) {
  @media only screen and (max-width: $size - 0.02px) {
    @content;
  }
}

@mixin grid-boxes($columns: auto, $rows: auto, $box_width: auto, $box_height: auto, $gap: 0) {
  width: 100%;
  display: grid;
  grid-template-columns: repeat($columns, $box_width);
  grid-template-rows: repeat($rows, $box_height);
  grid-gap: $gap;
  .box {
    position: relative;
    overflow: hidden;
  }
}

/*
* [03] Typography
*/

/*
* [a] Defintions
*/
@font-face {
  font-family: 'Avenir';
  src: url('~/static/fonts/Avenir/AvenirLTStd-Light.otf');
  font-weight: 100;
  font-style: normal;
}
@font-face {
  font-family: 'Avenir';
  src: url('~/static/fonts/Avenir/AvenirLTStd-Roman.otf');
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: 'Avenir';
  src: url('~/static/fonts/Avenir/AvenirLTStd-Heavy.otf');
  font-weight: bold;
  font-style: normal;
}
$font: 'Avenir', 'Verdana', sans-serif;

/*
* [b] Mixins
*/
@mixin title-font {
  font-size: 18px;
  letter-spacing: 1px;
  font-weight: bold;
  text-transform: uppercase;
}

/**
 * [04] Animations
 */
@keyframes fade-in {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes scale-up {
  0% { transform: scale(0.7); }
  100% { transform: scale(1); }
}

@keyframes up {
  0% {
    transform: translateY(50px);
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes up-from-left {
  0% {
    transform: translate(-50px, 50px) scale(0.7);
  }
  100% {
    transform: translate(0, 0) scale(1);
  }
}

@keyframes up-from-right {
  0% {
    transform: translate(50px, 50px) scale(0.7);
  }
  100% {
    transform: translate(0, 0) scale(1);
  }
}

@mixin fade-in-up($duration: 0.8s) {
  animation: fade-in $duration,
    up $duration;
}

@mixin fade-in-up-offset-1($delay: 1.2s, $duration: 0.8s) {
  animation: fade-in $duration,
    up $delay;
}

@mixin fade-in-up-offset-2($delay: 1.6s, $duration: 0.8s) {
  animation: fade-in $duration,
    up $delay;
}

@mixin fade-in-up-from-left($duration: 1s) {
  animation: fade-in $duration,
    up-from-left $duration;
}

@mixin fade-in-up-from-right($duration: 1s) {
  animation: fade-in $duration,
    up-from-right $duration;
}

/**
 * [05] Icons
 */
@mixin icon-plus($container_width: 40px, $icon_width: 20px, $line_width: 2px) {
  width: $container_width;
  height: $container_width;
  z-index: 10;
  &:after,
  &:before {
    content: '';
    transition: 0.4s;
    position: absolute;
    display: block;
    background: white;
    z-index: 10;
  }
  &:after {
    width: $line_width;
    height: $icon_width - ($line_width / 2);
    margin-top: - (($icon_width / 2) - ($line_width / 2));
    top: 50%;
    left: (($container_width - $icon_width) / 2) + ($icon_width / 2) - ($line_width / 2);
    right: ($icon_width / 2) - ($line_width / 2);
  }
  &:before {
    height: $line_width;
    width: $icon_width - ($line_width / 2);
    margin-left: - (($icon_width / 2) - ($line_width / 2));
    left: 50%;
    top: (($container_width - $icon_width) / 2) + ($icon_width / 2) - ($line_width / 2);
    bottom: ($icon_width / 2) - ($line_width / 2);
  }
}